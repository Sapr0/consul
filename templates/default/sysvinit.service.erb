#!/bin/sh
#
# <%= @name %> - this script manages the consul agent
#
# chkconfig: 2345 95 05
# description: this script manages the consul agent
#
### BEGIN INIT INFO
# Provides:             <%= @name %>
# Required-Start:       $local_fs $network
# Required-Stop:        $local_fs $network
# Should-Start:
# Should-Stop:
# Default-Start:        2 3 4 5
# Default-Stop:         0 1 6
# Short-Description:    Manage the consul agent
# Description:          Consul startup/shutdown script
### END INIT INFO

<%= "limit nofile #{node['consul']['service_nofile']}" if node['consul']['service_nofile'] %>

prog="<%= @name %>"
user="<%= @user %>"
exec="<%= @program %>"
pidfile="/var/run/$prog.pid"
logfile="/var/log/$prog.log"
lockfile="/var/lock/subsys/$prog"
conffile=<%= @config_file %>
confdir=<%= @config_dir %>

<%- @environment.each do |key, val| -%>
export <%= key %>="<%= val %>"
<%- end -%>
export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

. /etc/rc.d/init.d/functions

_start() {
    [ -x $exec ] || exit 5
    [ -f $conffile ] || exit 6
    [ -d $confdir ] || exit 6

    umask 077
    touch $pidfile $logfile
    chown $user $pidfile $logfile

    echo -n $"Starting $prog: "
    daemon \
        --pidfile=$pidfile \
        --user=$user \
        " { $exec agent -config-file=$conffile -config-dir=$confdir >> $logfile 2>&1 & } ; echo \$! >| $pidfile "
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch $lockfile
    return $RETVAL
}

_stop() {
    echo -n $"Stopping $prog: "
    ## graceful shutdown with SIGINT
    killproc -p $pidfile $exec -SIGINT
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && rm -f $lockfile $pidfile
    return $RETVAL
}

_status() {
    status -p $pidfile -l $prog $exec
}

_reload() {
    echo -n $"Reloading $prog: "
    killproc -p $pidfile $exec -HUP
    echo
}

_restart() {
    _stop
    while :
    do
        ss -pl | fgrep "((\"$prog\"," > /dev/null
        [ $? -ne 0 ] && break
        sleep 0.1
    done
    _start
}

_status_q() {
    _status >/dev/null 2>&1
}

case "$1" in
    start)
        _status_q && exit 0
        _start
        ;;
    stop)
        _status_q || exit 0
        _stop
        ;;
    restart|force-reload)
        _restart
        ;;
    reload)
        _status_q || exit 7
        _reload
        ;;
    status)
        _status
        ;;
    condrestart|try-restart)
        _status_q || exit 0
        _restart
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac

exit $?
